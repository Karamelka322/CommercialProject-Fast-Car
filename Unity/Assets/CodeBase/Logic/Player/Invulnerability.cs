using CodeBase.Logic.Player.Ability;
using CodeBase.Services.Tween;
using UnityEngine;
using Zenject;

namespace CodeBase.Logic.Player
{
    public class Invulnerability : MonoBehaviour, IAbility
    {
        [SerializeField] 
        private float _invulnerabilityDuration;

        private const string PlayerLayer = "Player";
        private const string EnemyLayer = "Enemy";

        private ITweenService _tweenService;

        [Inject]
        private void Construct(ITweenService tweenService)
        {
            _tweenService = tweenService;
        }
        
        public void Enable()
        {
            Physics.IgnoreLayerCollision(
                LayerMask.NameToLayer(PlayerLayer),
                LayerMask.NameToLayer(EnemyLayer),
                true);
            
            _tweenService.SingleTimer<Invulnerability>(_invulnerabilityDuration, Disable);
        }

        public void Disable() => 
            Physics.IgnoreLayerCollision(
                LayerMask.NameToLayer(PlayerLayer),
                LayerMask.NameToLayer(EnemyLayer),
                false);
    }
}